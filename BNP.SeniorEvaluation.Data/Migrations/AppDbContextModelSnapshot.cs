// <auto-generated />
using System;
using BNP.SeniorEvaluation.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BNP.SeniorEvaluation.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.16");

            modelBuilder.Entity("BNP.SeniorEvaluation.Domain.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DateUpdated")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "William",
                            LastName = "Shakespeare"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Jane",
                            LastName = "Austen"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Mark",
                            LastName = "Twain"
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Fyodor",
                            LastName = "Dostoevsky"
                        },
                        new
                        {
                            Id = 5,
                            FirstName = "Charlotte",
                            LastName = "Bronte"
                        });
                });

            modelBuilder.Entity("BNP.SeniorEvaluation.Domain.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AuthorId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DateUpdated")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            Title = "Romeo and Juliet"
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 2,
                            Title = "Pride and Prejudice"
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 3,
                            Title = "The Adventures of Tom Sawyer"
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 4,
                            Title = "Crime and Punishment"
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 5,
                            Title = "Jane Eyre"
                        },
                        new
                        {
                            Id = 6,
                            AuthorId = 1,
                            Title = "Hamlet"
                        },
                        new
                        {
                            Id = 7,
                            AuthorId = 2,
                            Title = "Sense and Sensibility"
                        },
                        new
                        {
                            Id = 8,
                            AuthorId = 3,
                            Title = "The Adventures of Huckleberry Finn"
                        },
                        new
                        {
                            Id = 9,
                            AuthorId = 4,
                            Title = "The Brothers Karamazov"
                        },
                        new
                        {
                            Id = 10,
                            AuthorId = 5,
                            Title = "Villette"
                        },
                        new
                        {
                            Id = 11,
                            AuthorId = 1,
                            Title = "Macbeth"
                        },
                        new
                        {
                            Id = 12,
                            AuthorId = 2,
                            Title = "Emma"
                        },
                        new
                        {
                            Id = 13,
                            AuthorId = 3,
                            Title = "Adventures of Huckleberry Finn"
                        },
                        new
                        {
                            Id = 14,
                            AuthorId = 4,
                            Title = "Notes from Underground"
                        },
                        new
                        {
                            Id = 15,
                            AuthorId = 5,
                            Title = "Shirley"
                        },
                        new
                        {
                            Id = 16,
                            AuthorId = 1,
                            Title = "King Lear"
                        },
                        new
                        {
                            Id = 17,
                            AuthorId = 2,
                            Title = "Mansfield Park"
                        },
                        new
                        {
                            Id = 18,
                            AuthorId = 3,
                            Title = "The Prince and the Pauper"
                        },
                        new
                        {
                            Id = 19,
                            AuthorId = 4,
                            Title = "The Idiot"
                        });
                });

            modelBuilder.Entity("BNP.SeniorEvaluation.Domain.Book", b =>
                {
                    b.HasOne("BNP.SeniorEvaluation.Domain.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("BNP.SeniorEvaluation.Domain.Author", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
